package com.spring.client.reply.controller;
import java.util.List;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.spring.client.reply.service.ReplyService;
import com.spring.client.reply.vo.ReplyVO;

import lombok.AllArgsConstructor;
//import lombok.extern.log4j.Log4j;

/* 참고: REST(Representational State Transfer)의 약어로, 하나의 URI는 하나의 고유한 리소스를 대표하도록 설계된다는 개념이다.
 * 		즉 REST방식은 특정 URL은 반드시 그에 상응하는 데이터 자체라는 것을 의미하는 방식이다.
 * 		예를 들어 '/board/boardDetail?b_num=125' → 'board/125'는 게시물 중에서 125번이라는 고유한 의미를 가지도록 설계하고,
 * 		이에 대한 처리는 GET, POST 방식과 같이 추가적인 정보를 통해서 결정한다.
 * 		(실무에서 많이 활용되는 방식이다.) */

/* 참고: @RestController (@Controller + @ResponesBody) ★중요 !!!★
 * 		Controller가 REST방식을 처리하기 위한 것임을 명시.(Spring5부터 추가됨)-ajax 요청에 의해 데이터를 반환할 때 사용한다.
 * 		(기존의 특정한 JSP와 같은 뷰를 만들어내는 것이 목적이 아닌, REST방식의 데이터 처리를 위해서
 * 		사용하는(데이터 자체를 반환) 어노테이션이다.-화면(뷰) 반환 X. JSON이나 TEXT형태로만 반환할 수 있다. 
 * 		뷰를 반환하려면 @RestController 사용 못하고, 게시판처럼 사용해야함.
 * 
 * 	-RestController를 사용할 때 필요한 어노테이션들
 * 		@ResponseBody: 일반적인 JSP와 같은 뷰로 전달되는 것이 아닌, 데이터 자체를 전달하기 위한 용도이다.
 * 		@PathVariable: URL경로에 있는 값을 파라미터로 추출하려고 할 때 사용한다.
 * 		@RequestBody: JSON 데이터를 원하는 타입으로 바인딩 처리한다.(클라이언트로부터 받은 데이터가 JSON일 경우, 그를 VO에 담을 때 바인딩해주는 중간 역할을 한다.) 
 * */

//댓글 처리는 모두 ajax로 하기 때문에 @RestController를 사용한다.
@RestController
@RequestMapping(value="/replies/*")
//@Log4j
@AllArgsConstructor
public class ReplyController {
	
	private ReplyService replyService;
	
	/* ★댓글 글목록 구현하기★
	 * @return List<ReplyVO>
	 * 참고: @PathVariable는 URI의 경로에서 원하는 데이터를 추출하는 용도의 어노테이션.
	 * 		응답 문서 타입을 xml이나 json으로 반환할 때에는 produces속성을 사용한다.
	 * produces = {MediaType.APLLICATION_XML_VALUE, MediaType.APPLICATION_JSON_UTF8_VALUE }
	 * 현재 요청 URL : http://localhost:8080/replies/all/게시판 글번호
	 * 예전 요청 URL : http://localhost:8080/replies/replyList?b_num=게시판 글번호
	 * ResponseEntity는 개발자가 직접 결과 데이터와 HTTP 상태 코드를 직접 제어할 수 있는 클래스이다. */
	
		
	
	@GetMapping(value="/all/{b_num}", produces=MediaType.APPLICATION_JSON_UTF8_VALUE)
	//@PathVariable로 추출하려면, URL 매핑 정보부터 글번호를 명시해주어야 한다.(시작부터 URL에 포함시킴)
	public ResponseEntity<List<ReplyVO>> replyList(@PathVariable("b_num") Integer b_num){
		//게시판 글 번호를 URL에서 추출한다.
		//log.info("list 호출 성공 !");
		
		ResponseEntity<List<ReplyVO>> entity = null;
		entity = new ResponseEntity<>(replyService.replyList(b_num), HttpStatus.OK);
		return entity;
		/*
		 * list 타입의 replyVO를 반환받음
		 * (데이터가 여러개일 경우 json도 배열을 생성한다.)
		 */	
		}
	
	
	
	
	
}

