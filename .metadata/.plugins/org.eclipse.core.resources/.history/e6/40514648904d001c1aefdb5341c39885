package com.spring.common.file;

import java.io.File;
import java.io.IOException;

import org.springframework.web.multipart.MultipartFile;

import lombok.extern.log4j.Log4j;
@Log4j
public class FileuploadUtil {
	/* FileUploadUtil 클래스의 모든 메서드는 정적 메서드로 정의한다. 접근방법: 클래스명.메서드명() */
	//파일을 업로드할 폴더 생성.
	public static void makeDir(String docRoot) {
		File fileDir = new File(docRoot);
		if(fileDir.exists()) {
			return;
		}
		fileDir.mkdirs();
	}
	
	/* 파일 업로드 메서드
	 * 파일명이 중복시 해결 방법
	 * System.currentTimeMillis()를 사용하거나 UUID는 128비트의 수이다.
	 * 표준 형식에서 UUID는 32개의 16진수로 표현되며 총 36개 문자(32개 문자와 4개의 하이픈)로 된
	 * 8-4-4-4-12라는 5개의 그룹을 하이픈으로 구분한다.
	 * 이때 UUID.randomUUID().toString()을 이용해서 얻는다.
	 * 50e8400-e29b-41d4-a716-446655440000
	 * 보통 하이픈을 제거하여 유일값을 얻어 중복을 해결한다. */
	public static String fileUpload(MultipartFile file, String fileName)throws IOException{
		log.info("fileUpload 호출 성공");
		
		String real_name=null;
		//MultipartFile 클래스의 getFile() 메서드로 클라이언트가 업로드한 파일명을 얻어온다.
		String org_name = file.getOriginalFilename();
		log.info("org_name : " + org_name);
		
		//받아온 파일명이 중복될 수 있으므로 중복되지 않도록 파일명을 변경한다. C://uploadStorage//board//board_0000000000_a.gif
		if(org_name !=null && (!org_name.equals(""))) {
			real_name = fileName +"_"+System.currentTimeMillis()+"_"+org_name; //저장할 파일 이름을 변경하는 것은 마음대로 지정할 수 있음.(중복만 안되게)
			
			String docRoot = "C://uploadStorage//"+fileName;
			makeDir(docRoot);
			
			File fileAdd = new File(docRoot+"/"+real_name); //파일 생성후
			log.info("업로드할 파일(fileAdd) : "+fileAdd);
			
			file.transferTo(fileAdd);
		}
			return real_name;
		
	}

}
