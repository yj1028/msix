/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.54
 * Generated at: 2021-11-25 04:50:02 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class writeForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("	<head>\r\n");
      out.write("		<meta charset=\"UTF-8\">\r\n");
      out.write("		<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge, chrome=1\" />\r\n");
      out.write("		<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, user-scalable=no\" />\r\n");
      out.write("      	<link rel=\"shortcut icon\" href=\"/resources/image/icon.png\" />\r\n");
      out.write("		<link rel=\"apple-touch-icon\" href=\"/resources/image/icon.png\" />\r\n");
      out.write("		<!--[if lt IE 9]>\r\n");
      out.write("		<script src=\"/resources/js/html5shiv.js\"></script>\r\n");
      out.write("		<![endif]-->\r\n");
      out.write("		\r\n");
      out.write("		<title>게시글 입력 화면</title>\r\n");
      out.write("		\r\n");
      out.write("		<script type=\"text/javascript\" src=\"/resources/include/js/common.js\"></script>\r\n");
      out.write("		<script type=\"text/javascript\" src=\"/resources/include/js/jquery-1.12.4.min.js\"></script>\r\n");
      out.write("		<script type=\"text/javascript\">\r\n");
      out.write("		\r\n");
      out.write("			$(function(){\r\n");
      out.write("				$(\"#boardInsertBtn\").click(function(){\r\n");
      out.write("					if(!chkData(\"#b_name\", \"작성자를\"))return false;\r\n");
      out.write("					else if(!chkData(\"#b_title\", \"글 제목을 \"))return false;\r\n");
      out.write("					else if(!chkData(\"#b_content\", \"글 내용을 \"))return false;\r\n");
      out.write("					else if(!chkData(\"#b_pwd\", \"비밀번호를 \"))return false;\r\n");
      out.write("					/* else if(!chkData(\"#file\", \"업로드할 이미지 파일을\")) return;\r\n");
      out.write("					else if(!chkFile($(\"#file\"))) return; */\r\n");
      out.write("					\r\n");
      out.write("					else{//파일첨부는 필수가 아니므로 if문을 다시 걸어준다.(유효성 체크)\r\n");
      out.write("						if($(\"#file\").val() != \"\"){\r\n");
      out.write("							if(!chkFile($(\"#file\"))) return;\r\n");
      out.write("						}\r\n");
      out.write("						$(\"#f_writeForm\").attr({\r\n");
      out.write("							method:\"post\",\r\n");
      out.write("							enctype:\"multipart/form-data\",//파일을 전송하기 위한 속성 추가\r\n");
      out.write("							action:\"/board/boardInsert\"\r\n");
      out.write("						});\r\n");
      out.write("						$(\"#f_writeForm\").submit();\r\n");
      out.write("					}\r\n");
      out.write("				});\r\n");
      out.write("				$(\"#boardListBtn\").click(function(){\r\n");
      out.write("					location.href=\"/board/boardList\";\r\n");
      out.write("				});\r\n");
      out.write("				$(\"#resetBtn\").click(function(){\r\n");
      out.write("					$(\"#f_writeForm\").each(function(){\r\n");
      out.write("						this.reset();\r\n");
      out.write("					});\r\n");
      out.write("				});\r\n");
      out.write("			});\r\n");
      out.write("		</script>\r\n");
      out.write("	</head>\r\n");
      out.write("	<body>\r\n");
      out.write("		<div class=\"container\">\r\n");
      out.write("		<h1>게시판 입력 화면</h1>\r\n");
      out.write("		<div class=\"form-group\">\r\n");
      out.write("		<form id=\"f_writeForm\" class=\"form-horizontal\">\r\n");
      out.write("		<table class=\"table table-bordered\">\r\n");
      out.write("				<tbody>\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td class=\"text-center\">작성자</td>\r\n");
      out.write("						<td colspan=\"3\" class=\"text-left\"><input type=\"text\" id=\"b_name\" name=\"b_name\" maxlength=\"5\" ></td>\r\n");
      out.write("					</tr>\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td class=\"text-center\">글 제목</td>\r\n");
      out.write("						<td colspan=\"3\"><input type=\"text\" class=\"form-control\" name=\"b_title\" id=\"b_title\" maxlength=\"50\"></td>\r\n");
      out.write("					</tr>\r\n");
      out.write("					<tr>\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td class=\"text-center\">글 내용</td>\r\n");
      out.write("						<td colspan=\"3\"><textarea name=\"b_content\" id=\"b_content\" rows=\"8\" class=\"form-control\"></textarea></td>\r\n");
      out.write("					</tr>\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td class=\"text-center\">비밀번호</td>\r\n");
      out.write("						<td colspan=\"3\"><input type=\"password\" name=\"b_pwd\" id=\"b_pwd\" class=\"form-control\" maxlength=\"15\"></td>\r\n");
      out.write("					</tr>\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td>파일 첨부</td>\r\n");
      out.write("						<td class=\"text-left\"><input type=\"file\" name=\"file\" id=\"file\" /></td>\r\n");
      out.write("						<!-- 파일을 처리하기 위해 MultipartFile이 필요하므로 b_file이 아닌 그냥 file을 아이디로 설정해주어야 한다. -->\r\n");
      out.write("					</tr>				\r\n");
      out.write("				</tbody>\r\n");
      out.write("			</table>\r\n");
      out.write("		</form>\r\n");
      out.write("			\r\n");
      out.write("				<div class=\"text-right\">\r\n");
      out.write("				<input type=\"button\" value=\"저장\" id=\"boardInsertBtn\" class=\"btn btn-default\" />\r\n");
      out.write("				<input type=\"button\" value=\"목록\" id=\"boardListBtn\" class=\"btn btn-default\" />\r\n");
      out.write("				<input type=\"button\" value=\"취소\" id=\"resetBtn\" class=\"btn btn-default\"/>\r\n");
      out.write("				</div>\r\n");
      out.write("			\r\n");
      out.write("		</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
