/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.54
 * Generated at: 2021-11-17 04:44:13 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.sample;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class exam06_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("	<head>\r\n");
      out.write("		<meta charset=\"UTF-8\">\r\n");
      out.write("		<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge, chrome=1\" />\r\n");
      out.write("		<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, user-scalable=no\" />\r\n");
      out.write("      	<link rel=\"shortcut icon\" href=\"/resources/image/icon.png\" />\r\n");
      out.write("		<link rel=\"apple-touch-icon\" href=\"/resources/image/icon.png\" />\r\n");
      out.write("		<!--[if lt IE 9]>\r\n");
      out.write("		<script src=\"/resources/js/html5shiv.js\"></script>\r\n");
      out.write("		<![endif]-->\r\n");
      out.write("		\r\n");
      out.write("		<title>여러 폼 데이터를 하나의 요청 데이터로 보내기</title>\r\n");
      out.write("		\r\n");
      out.write("		<link rel=\"stylesheet\" type=\"text/css\" href=\"/resources/dist/css/bootstrap.min.css\" />\r\n");
      out.write("		<link rel=\"stylesheet\" type=\"text/css\" href=\"/resources/dist/css/bootstrap-theme.min.css\" />\r\n");
      out.write("		\r\n");
      out.write("		<script type=\"text/javascript\" src=\"/resources/js/jquery-1.12.4.min.js\"></script>\r\n");
      out.write("		<script type=\"text/javascript\" src=\"/resources/dist/js/bootstrap.min.js\"></script>\r\n");
      out.write("		<script type=\"text/javascript\">\r\n");
      out.write("			$(function(){\r\n");
      out.write("				$(\"#btn\").click(function(){\r\n");
      out.write("					$.ajax({\r\n");
      out.write("						url: \"/sample/exam06\",//전송 url\r\n");
      out.write("						type: \"post\",\r\n");
      out.write("						/* 매핑이름이 같아도 메서드 방식이 다르다면 식별이 가능하다.\r\n");
      out.write("						  화면 보여주는 것은 Get방식, 로직처리는 Post방식. */\r\n");
      out.write("						data: $(\"form\").serialize(),//폼 두개의 데이터를 모두 전송하겠음.\r\n");
      out.write("						dataType: \"text\",//요청에 의해 전달받은 결과값의 타입. text/xml/json만 올 수 있음.\r\n");
      out.write("						error: function(){\r\n");
      out.write("							alert('시스템 오류입니다. 관리자에게 문의 하세요');\r\n");
      out.write("						},\r\n");
      out.write("						success: function(resultData){\r\n");
      out.write("							alert(resultData);\r\n");
      out.write("						}\r\n");
      out.write("					});\r\n");
      out.write("				});\r\n");
      out.write("			});\r\n");
      out.write("		</script>\r\n");
      out.write("	</head>\r\n");
      out.write("	\r\n");
      out.write("	<body>\r\n");
      out.write("		<div class=\"container\">\r\n");
      out.write("		<h3>여러 폼 데이터를 하나의 요청 데이터로 보내기</h3><br />\r\n");
      out.write("			<form id=\"VOForm\">\r\n");
      out.write("		 		<div class=\"form-group\">\r\n");
      out.write("		 			<label>번호 <input type=\"text\" placeholder=\"번호 입력\" name=\"no\" id=\"no\" class=\"form-control\" /></label>\r\n");
      out.write("		 			<label>이름 <input type=\"text\" placeholder=\"이름 입력\" name=\"name\" id=\"name\" class=\"form-control\"/></label>\r\n");
      out.write("		 			<label>핸드폰 <input type=\"text\" placeholder=\"핸드폰 번호 입력\" name=\"phone\" id=\"phone\" class=\"form-control\"/></label>\r\n");
      out.write("		 		</div>\r\n");
      out.write("			 </form>\r\n");
      out.write("		 \r\n");
      out.write("		 	<form id=\"TicketForm\">\r\n");
      out.write("		 		<div class=\"form-group\">\r\n");
      out.write("		 			<label>번호 <input type=\"text\" placeholder=\"번호 입력\" name=\"tno\" id=\"tno\" class=\"form-control\" /></label>\r\n");
      out.write("		 			<label>소유자 <input type=\"text\" placeholder=\"소유자 입력\" name=\"owner\" id=\"owner\" class=\"form-control\"/></label>\r\n");
      out.write("		 			<label>등급 <input type=\"text\" placeholder=\"등급 입력\" name=\"grade\" id=\"grade\" class=\"form-control\"/></label>\r\n");
      out.write("		 		</div>\r\n");
      out.write("		 	</form>\r\n");
      out.write("		 	\r\n");
      out.write("		 	<div class=\"form-group\">\r\n");
      out.write("		 		<button type=\"button\" id=\"btn\" class=\"btn btn-primary\">확인</button>\r\n");
      out.write("		 	</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
