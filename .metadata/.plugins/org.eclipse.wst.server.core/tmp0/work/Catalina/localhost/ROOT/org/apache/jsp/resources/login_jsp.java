/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.54
 * Generated at: 2021-11-26 05:50:44 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.resources;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/springCoding/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/lastProject/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1637024497083L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("      \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("  <head>\r\n");
      out.write("    <meta charset=\"utf-8\">\r\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->\r\n");
      out.write("    <meta name=\"description\" content=\"\">\r\n");
      out.write("    <meta name=\"author\" content=\"\">\r\n");
      out.write("    \r\n");
      out.write("    <!-- Bootstrap CSS -->\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css\" integrity=\"sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm\" crossorigin=\"anonymous\">\r\n");
      out.write("    <title>로그인 폼</title>\r\n");
      out.write("    <style>\r\n");
      out.write("        @import url(\"http://fonts.googleapis.com/earlyaccess/nanumgothic.css\");\r\n");
      out.write("	\r\n");
      out.write("	html {\r\n");
      out.write("		height: 100%;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	body {\r\n");
      out.write("	    width:100%;\r\n");
      out.write("	    height:100%;\r\n");
      out.write("	    margin: 0;\r\n");
      out.write("  		padding-top: 200px;\r\n");
      out.write("  		padding-bottom: 40px;\r\n");
      out.write("  		font-family: \"Nanum Gothic\", arial, helvetica, sans-serif;\r\n");
      out.write("  		background-repeat: no-repeat;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("    .card {\r\n");
      out.write("        margin: 0 auto; /* Added */\r\n");
      out.write("        float: none; /* Added */\r\n");
      out.write("        margin-bottom: 10px; /* Added */\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("    #btn-Yes{\r\n");
      out.write("        background-color: #e4932b;\r\n");
      out.write("        border: none;\r\n");
      out.write("    }\r\n");
      out.write("	\r\n");
      out.write("	.login .form-control {\r\n");
      out.write("  		position: relative;\r\n");
      out.write("  		height: auto;\r\n");
      out.write("  		-webkit-box-sizing: border-box;\r\n");
      out.write("     	-moz-box-sizing: border-box;\r\n");
      out.write("        	 box-sizing: border-box;\r\n");
      out.write("  		padding: 10px;\r\n");
      out.write("  		font-size: 16px;\r\n");
      out.write("	}\r\n");
      out.write("    .checkbox{\r\n");
      out.write("        margin-right: 20px;\r\n");
      out.write("        text-align: right;\r\n");
      out.write("    }\r\n");
      out.write("    .card-title{\r\n");
      out.write("        margin-left: 30px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .links{\r\n");
      out.write("        text-align: center;\r\n");
      out.write("        margin-bottom: 10px;\r\n");
      out.write("    }\r\n");
      out.write("    a{ \r\n");
      out.write("    	color: #f58b34; text-decoration: none; \r\n");
      out.write("    }\r\n");
      out.write("    .check{\r\n");
      out.write("    	color : red;\r\n");
      out.write("    }\r\n");
      out.write("	 \r\n");
      out.write("    </style>\r\n");
      out.write("  </head>\r\n");
      out.write("\r\n");
      out.write("  <body cellpadding=\"0\" cellspacing=\"0\" marginleft=\"0\" margintop=\"0\" width=\"100%\" height=\"100%\" align=\"center\">\r\n");
      out.write("\r\n");
      out.write("	<div class=\"card align-middle\" style=\"width:25rem;\">\r\n");
      out.write("		<div class=\"card-title\" style=\"margin-top:30px;\">\r\n");
      out.write("            \r\n");
      out.write("			<h2 class=\"card-title\" style=\"color:#f58b34;\"><img src=\"/resources/img/rabbit_logo.png\"/></h2>\r\n");
      out.write("		</div>\r\n");
      out.write("      <form action=\"login\" class=\"login\" method=\"POST\">\r\n");
      out.write("        <div class=\"checkbox\">\r\n");
      out.write("            <label>\r\n");
      out.write("            <input type=\"radio\" name=\"mode\" value=\"admin\"> 관리자\r\n");
      out.write("			&nbsp;&nbsp;\r\n");
      out.write("			<input type=\"radio\" name=\"mode\" value=\"member\" checked> 일반회원\r\n");
      out.write("            </label>\r\n");
      out.write("          </div>\r\n");
      out.write("		<div class=\"card-body\">\r\n");
      out.write("  \r\n");
      out.write("        <input type=\"text\" name=\"LoginId\" id=\"Id\" class=\"form-control\" placeholder=\"아이디\" autofocus required><BR>\r\n");
      out.write("        <input type=\"password\" name=\"LoginPw\" id=\"Pw\" class=\"form-control\" placeholder=\"비밀번호\"  required><br>\r\n");
      out.write("         <p id=\"check\" class=\"check\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${login_msg}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</p><br/>\r\n");
      out.write("        <input id=\"btn-Yes\" class=\"btn btn-lg btn-primary btn-block\" type=\"submit\" value=\"로 그 인\">\r\n");
      out.write("      </form>\r\n");
      out.write("    \r\n");
      out.write("		</div>\r\n");
      out.write("        <div class=\"links\">\r\n");
      out.write("            <a href=\"memberId\">아이디 찾기</a> | <a href=\"memberPw\">비밀번호 찾기</a> | <a href=\"memberRegist\">회원가입</a>\r\n");
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("	</div>\r\n");
      out.write("   \r\n");
      out.write("  </body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
